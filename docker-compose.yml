version: '3.7'

# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-airflow-environment: &x_airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__FERNET_KEY=hCRoPUYBO27QiEg1MRu5hSjLG7yNd8y8XKlm-8kRlkQ=
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=10
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__RBAC=True
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================

services:
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"

  jupyterlab:
    image: tfx-cb-jupyter:0.0.1
    # The webserver initializes permissions, so sleep for that to (approximately) be finished
    # No disaster if the webserver isn't finished by then, but create_user will start spitting out errors until the permissions exist
    ports:
      - "8888:8888"
      - "6006:6006"
    volumes:
      - ./dags:/home/tfx/dags
      - ./data:/home/tfx/data
      - ./tfx:/home/tfx/tfx    # for observing
      - ./tfx:/opt/airflow/tfx # for consistent artefacts' lookup via MLMD
      - ./notebooks:/home/tfx/notebooks
      - logs:/opt/airflow/logs

  init:
    image: tfx-cb-airflow:0.0.1
    depends_on:
      - postgres
    environment: *x_airflow_environment
    entrypoint: /bin/bash
    # The webserver initializes permissions, so sleep for that to (approximately) be finished
    # No disaster if the webserver isn't finished by then, but create_user will start spitting out errors until the permissions exist
    command: -c 'airflow db upgrade && sleep 5 && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'

  webserver:
    image: tfx-cb-airflow:0.0.1
    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
    ports:
      - "8181:8080"
    environment: *x_airflow_environment
    command: webserver

  scheduler:
    image: tfx-cb-airflow:0.0.1
    restart: always
    depends_on:
      init:
        condition: service_completed_successfully
    volumes:
      - ./dags:/opt/airflow/dags:rw
      - ./data:/opt/airflow/data:rw
      - ./tfx:/opt/airflow/tfx:rw
      - logs:/opt/airflow/logs
    environment: *x_airflow_environment
    entrypoint: ["/bin/bash"]
    command: ["-c", "airflow scheduler"]

volumes:
  logs:
